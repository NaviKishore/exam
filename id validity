#include <stdio.h>
#include <stdbool.h>
#include <string.h>
#include <ctype.h>

// Function to check if a character is a valid character for an identifier
bool isValidIdentifierChar(char ch) {
    return isalnum(ch) || ch == '_';
}

// Function to check if a string is a valid identifier
bool isValidIdentifier(char *identifier) {
    // Check if the identifier is not empty
    if (strlen(identifier) == 0) {
        return false;
    }

    // Check if the first character is a letter or underscore
    if (!isalpha(identifier[0]) && identifier[0] != '_') {
        return false;
    }

    // Check the remaining characters
    for (int i = 1; identifier[i] != '\0'; i++) {
        if (!isValidIdentifierChar(identifier[i])) {
            return false;
        }
    }

    // Check if the identifier is a keyword or reserved word (not implemented in this example)

    return true;
}

int main() {
    char identifier1[] = "validIdentifier";
    char identifier2[] = "_valid_identifier";
    char identifier3[] = "1invalid";
    char identifier4[] = "";

    printf("%s is %s\n", identifier1, isValidIdentifier(identifier1) ? "valid" : "invalid");
    printf("%s is %s\n", identifier2, isValidIdentifier(identifier2) ? "valid" : "invalid");
    printf("%s is %s\n", identifier3, isValidIdentifier(identifier3) ? "valid" : "invalid");
    printf("%s is %s\n", identifier4, isValidIdentifier(identifier4) ? "valid" : "invalid");

    return 0;
}
