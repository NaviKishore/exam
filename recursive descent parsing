#include <stdio.h>
#include <stdlib.h>
#include <ctype.h>

// Function declarations
int expr();
int term();
int factor();

char input[100];
int index = 0;

// Function to consume the next character from the input
void consume() {
    index++;
}

// Function to peek at the next character in the input
char peek() {
    return input[index];
}

// Function to parse an expression
int expr() {
    int result = term();
    while (peek() == '+' || peek() == '-') {
        if (peek() == '+') {
            consume();
            result += term();
        } else if (peek() == '-') {
            consume();
            result -= term();
        }
    }
    return result;
}

// Function to parse a term
int term() {
    int result = factor();
    while (peek() == '*' || peek() == '/') {
        if (peek() == '*') {
            consume();
            result *= factor();
        } else if (peek() == '/') {
            consume();
            int divisor = factor();
            if (divisor == 0) {
                printf("Error: Division by zero\n");
                exit(EXIT_FAILURE);
            }
            result /= divisor;
        }
    }
    return result;
}

// Function to parse a factor
int factor() {
    int result;
    if (isdigit(peek())) {
        result = peek() - '0';
        consume();
    } else if (peek() == '(') {
        consume();
        result = expr();
        if (peek() != ')') {
            printf("Error: Missing closing parenthesis\n");
            exit(EXIT_FAILURE);
        }
        consume();
    } else {
        printf("Error: Invalid expression\n");
        exit(EXIT_FAILURE);
    }
    return result;
}

int main() {
    printf("Enter an arithmetic expression: ");
    fgets(input, sizeof(input), stdin);

    int result = expr();
    printf("Result: %d\n", result);

    return 0;
}
